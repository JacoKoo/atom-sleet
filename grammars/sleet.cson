scopeName: 'source.sleet'
name: 'Sleet'
fileTypes: ['sleet', 'st']
patterns: [
    match: '#!.*'
    name: 'comment.line.shebang.sleet'
,
    include: '#comment_line'
,
    include: '#comment_block'
,
    include: '#comment_block2'
,
    include: '#tag'

]
repository:
    comment_line:
        match: '^\\s*#\\s+.*'
        name: 'comment.line.sleet'
    comment_block:
        begin: '^(\\s*)#\\.\\s*$'
        end: '^(?!\\1\\s+|$)'
        name: 'comment.block.sleet'
    comment_block2:
        begin: '^(\\s*)#\\.\\.\\s*$'
        end: '^(?!\\1|$)'
        name: 'comment.block.sleet'
    tag:
        begin: '^(\\s*)(@?[\\w$_-]*)(([.#]@?[\\w$_-]+)*)'
        end: '^(?!\\1\\s+|$)'
        captures:
            2: name: 'entity.name.tag.sleet'
            3: name: 'entity.other.attribute-name.sleet'
        patterns: [
            include: '#one_dot'
        ]
    tag2:
        begin: '^(\\s*)(@?[\\w$_-]*)(([.#]@?[\\w$_-]+)*)(?=.*\\s*\\.\\.\\s*$)'
        end: '^(?!\\1|$)'
        captures:
            2: name: 'entity.name.tag.sleet'
            3: name: 'entity.other.attribute-name.sleet'
        patterns: [
            include: '#two_dot'
        ]

    inline_tag:
        match: '([:>+])\\s*(@?[\\w$_-]*)(([.#][\\w$@_-]+)*)'
        captures:
            1: name: 'keyword.control.sleet'
            2: name: 'entity.name.tag.sleet'
            3: name: 'entity.other.attribute-name.sleet'

    tag_extra:
        match: '(?<=\\S)(@(?:[\\w$@_-]*))(?=\\S|$)'
        name: 'keyword.control.sleet'


    attribute:
        begin: '\\('
        beginCaptures: 0: name: 'punctuation.definition.attribute.start.sleet'
        end: '\\)'
        endCaptures: 0: name: 'punctuation.definition.attribute.start.sleet'
        patterns: [
            include: '#helper'
        ,
            include: '#attribute_key'
        ,
            include: '#attribute_value'
        ,
            include: '#namespace'
        ]

    namespace:
        match: '(\\w*)\\:(?=\\S)'
        captures: 1: name: 'keyword.control.sleet'

    attribute_value:
        patterns: [
            include: '#helper'
        ,
            include: '#single_string'
        ,
            include: '#double_string'
        ,
            include: '#constant'
        ,
            include: '#number'
        ,
            include: '#unquoted'
        ,
            match: '\\+'
            name: 'keyword.control.sleet'
        ]

    unquoted:
        match: '([\\.\\w$@_-]+)(?=(\\s|\\)))'
        name: 'string.unquoted.sleet'

    single_string:
        begin: '\''
        beginCaptures: 0: name: 'punctuation.definition.string.begin.sleet'
        end: '\''
        endCaptures: 0: name: 'punctuation.definition.string.end.json'
        name: 'string.quoted.single.sleet'
        patterns: [
            match: '''(?x)
              \\\\                # a literal backslash
              (                   # followed by
                ['\\\\/bfnrt]     # one of these characters
                |                 # or
                u[0-9a-fA-F]{4}   # a u and four hex digits
              )
            '''
            name: 'constant.character.escape.json'
        ,
            match: '\\\\.'
            name: 'invalid.illegal.unrecognized-string-escape.json'
        ]

    double_string:
        begin: '"'
        beginCaptures: 0: name: 'punctuation.definition.string.begin.sleet'
        end: '"'
        endCaptures: 0: name: 'punctuation.definition.string.end.json'
        name: 'string.quoted.double.sleet'
        patterns: [
            match: '''(?x)
              \\\\                # a literal backslash
              (                   # followed by
                ["\\\\/bfnrt]     # one of these characters
                |                 # or
                u[0-9a-fA-F]{4}   # a u and four hex digits
              )
            '''
            name: 'constant.character.escape.json'
        ,
            match: '\\\\.'
            name: 'invalid.illegal.unrecognized-string-escape.json'
        ]

    constant:
        match: '\\b(true|false|null)\\b'
        name: 'constant.language.sleet'

    number:
        match: '-?(?=[1-9]|0(?!\\d))\\d+(\\.\\d+)?([eE][+-]?\\d+)?'
        name: 'constant.numeric.sleet'

    attribute_key:
        match: '\\s*([\\w$@_-]*)\\s*(=)'
        captures:
            1: name: 'entity.other.attribute-name.sleet'
            2: name: 'punctuation.definition.attribute.equals.sleet'

    helper:
        begin: '(\\w*)\\s*\\('
        beginCaptures: 1: name: 'entity.name.function.sleet'
        end: '\\)'
        patterns: [
            include: '#transform'
        ,
            include: '#attribute_key'
        ,
            include: '#attribute_value'
        ]

    transform:
        match: '\\s*\\|\\s*'
        name: 'keyword.control.sleet'

    one_dot:
        begin: '\\G'
        end: '\\.\\s*$'
        patterns: [
            include: '#comment_line'
        ,
            include: '#comment_block'
        ,
            include: '#comment_block2'
        ,
            include: '#script2'
        ,
            include: '#script'
        ,
            include: '#attribute'
        ,
            include: '#tag2'
        ,
            include: '#tag'
        ,
            include: '#inline_tag'
        ,
            include: '#tag_extra'
        ]

    two_dot:
        begin: '\\G'
        end: '\\.\\.\\s*$'
        patterns: [
            include: '#script'
        ]

    script:
        begin: '(\\s*).*(script)(?=.*\\.\\s*$)'
        beginCaptures:
            2: name: 'entity.name.tag.sleet'
        end: '^(?!(\\1\\s)|\\s*$)'
        patterns: [
            include: '#one_dot'
        ,
            include: 'source.js'
        ]

    script2:
        begin: '(\\s*).*(script)(?=.*\\.\\.\\s*$)'
        beginCaptures:
            2: name: 'entity.name.tag.sleet'
        end: '^(?!\\1|$)'
        patterns: [
            include: '#one_dot'
        ,
            include: 'source.js'
        ]
